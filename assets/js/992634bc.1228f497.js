"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[984],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),h=o,y=u["".concat(l,".").concat(h)]||u[h]||c[h]||i;return n?r.createElement(y,a(a({ref:t},d),{},{components:n})):r.createElement(y,a({ref:t},d))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},134:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],s={id:"python",title:"Python Extension",sidebar_label:"Python"},l=void 0,p={unversionedId:"extensions/python",id:"extensions/python",title:"Python Extension",description:"The following section contains Python-specific extensions to the build server",source:"@site/generated/docs/extensions/python.md",sourceDirName:"extensions",slug:"/extensions/python",permalink:"/docs/extensions/python",draft:!1,editUrl:"https://github.com/build-server-protocol/build-server-protocol/edit/master/docs/extensions/python.md",tags:[],version:"current",lastUpdatedBy:"Andrzej G\u0142uszak",lastUpdatedAt:1689863283,formattedLastUpdatedAt:"Jul 20, 2023",frontMatter:{id:"python",title:"Python Extension",sidebar_label:"Python"},sidebar:"docs",previous:{title:"Maven",permalink:"/docs/extensions/maven"},next:{title:"sbt",permalink:"/docs/extensions/sbt"}},d={},u=[{value:"BSP version",id:"bsp-version",level:2},{value:"BSP Server remote interface",id:"bsp-server-remote-interface",level:2},{value:"BuildTargetPythonOptions: request",id:"buildtargetpythonoptions-request",level:3},{value:"PythonOptionsParams",id:"pythonoptionsparams",level:4},{value:"PythonOptionsResult",id:"pythonoptionsresult",level:4},{value:"PythonOptionsItem",id:"pythonoptionsitem",level:4},{value:"BuildTargetData kinds",id:"buildtargetdata-kinds",level:2},{value:"PythonBuildTarget",id:"pythonbuildtarget",level:3},{value:"PythonBuildTarget",id:"pythonbuildtarget-1",level:4}],c={toc:u};function h(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The following section contains Python-specific extensions to the build server\nprotocol."),(0,i.kt)("h2",{id:"bsp-version"},"BSP version"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"2.1.0")),(0,i.kt)("h2",{id:"bsp-server-remote-interface"},"BSP Server remote interface"),(0,i.kt)("h3",{id:"buildtargetpythonoptions-request"},"BuildTargetPythonOptions: request"),(0,i.kt)("p",null,"The Python Options Request is sent from the client to the server to\nquery for the list of the interpreter flags used to run a given list of\ntargets."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"method: ",(0,i.kt)("inlineCode",{parentName:"li"},"buildTarget/pythonOptions")),(0,i.kt)("li",{parentName:"ul"},"params: ",(0,i.kt)("inlineCode",{parentName:"li"},"PythonOptionsParams")),(0,i.kt)("li",{parentName:"ul"},"result: ",(0,i.kt)("inlineCode",{parentName:"li"},"PythonOptionsResult"))),(0,i.kt)("h4",{id:"pythonoptionsparams"},"PythonOptionsParams"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface PythonOptionsParams {\n  targets: BuildTargetIdentifier[];\n}\n")),(0,i.kt)("h4",{id:"pythonoptionsresult"},"PythonOptionsResult"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface PythonOptionsResult {\n  items: PythonOptionsItem[];\n}\n")),(0,i.kt)("h4",{id:"pythonoptionsitem"},"PythonOptionsItem"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface PythonOptionsItem {\n  target: BuildTargetIdentifier;\n\n  /** Attributes added to the interpreter command\n   * For example: -E */\n  interpreterOptions: string[];\n}\n")),(0,i.kt)("h2",{id:"buildtargetdata-kinds"},"BuildTargetData kinds"),(0,i.kt)("h3",{id:"pythonbuildtarget"},"PythonBuildTarget"),(0,i.kt)("p",null,"This structure is embedded in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"data?: BuildTargetData")," field, when\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"dataKind")," field contains ",(0,i.kt)("inlineCode",{parentName:"p"},'"python"'),"."),(0,i.kt)("h4",{id:"pythonbuildtarget-1"},"PythonBuildTarget"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"PythonBuildTarget")," is a basic data structure that contains Python-specific\nmetadata, specifically the interpreter reference and the Python version."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface PythonBuildTarget {\n  version?: string;\n\n  interpreter?: URI;\n}\n")))}h.isMDXComponent=!0}}]);