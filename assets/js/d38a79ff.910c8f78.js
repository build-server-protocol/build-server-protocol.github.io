"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[477],{7318:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var o=i(3955),t=i(7862);const s={id:"server-discovery",title:"Build Server Discovery"},r=void 0,l={id:"overview/server-discovery",title:"Build Server Discovery",description:"The Build Server Protocol defines a standard convention for clients to connect",source:"@site/generated/overview/server-discovery.md",sourceDirName:"overview",slug:"/overview/server-discovery",permalink:"/docs/overview/server-discovery",draft:!1,unlisted:!1,editUrl:"https://github.com/build-server-protocol/build-server-protocol/edit/master/docs/overview/server-discovery.md",tags:[],version:"current",frontMatter:{id:"server-discovery",title:"Build Server Discovery"},sidebar:"docs",previous:{title:"Implementations",permalink:"/docs/overview/implementations"},next:{title:"Cargo",permalink:"/docs/extensions/cargo"}},c={},d=[{value:"The BSP Connection Details",id:"the-bsp-connection-details",level:2},{value:"Default Locations for BSP Connection Files",id:"default-locations-for-bsp-connection-files",level:3},{value:"Policy around Connection Files Generation",id:"policy-around-connection-files-generation",level:3},{value:"Build Tool Commands to Start BSP Servers",id:"build-tool-commands-to-start-bsp-servers",level:3},{value:"Example with <code>my-build-tool</code>",id:"example-with-my-build-tool",level:4},{value:"Clients Connecting to BSP Servers",id:"clients-connecting-to-bsp-servers",level:2}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"The Build Server Protocol defines a standard convention for clients to connect\nto BSP servers. This protocol has been designed such that:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Clients do not require beforehand knowledge about a specific build tool to be\nable to connect to its server."}),"\n",(0,o.jsx)(n.li,{children:"Clients can connect to build tools installed at the machine and at the\nworkspace level."}),"\n",(0,o.jsx)(n.li,{children:"Multiple build tools can run in the same workspace directory."}),"\n",(0,o.jsx)(n.li,{children:"Multiple connections to a single build tool can run in the same workspace directory (as long as the build scopes for\neach of the connections do not overlap)."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"the-bsp-connection-details",children:"The BSP Connection Details"}),"\n",(0,o.jsx)(n.p,{children:"The following JSON object defines the BSP connection details:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"export interface BspConnectionDetails {\n  /** The name of the build tool. */\n  name: String;\n  /** The version of the build tool. */\n  version: String;\n  /** The bsp version of the build tool. */\n  bspVersion: String;\n  /** A collection of languages supported by this BSP server. */\n  languages: String[];\n  /** Command arguments runnable via system processes to start a BSP server */\n  argv: String[];\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Every build tool supporting BSP must implement a build-tool-specific command to\ngenerate the BSP connection details in one of the standard BSP locations for BSP\nconnection files."}),"\n",(0,o.jsx)(n.p,{children:"BSP connection files:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"must be unique per build tool name, version and build scope to enable different versions\nof the same build tool to select different BSP connection mechanisms."}),"\n",(0,o.jsx)(n.li,{children:"multiple connection files for a single build tool name and version may co-exist in a single workspace root as long as\nthere is no overlap in their build scopes; this enables clients to request running separate builds within a single\nworkspace."}),"\n",(0,o.jsx)(n.li,{children:"can be updated by the build tool at any point in time, including during the\nstartup of the build tool in a workspace."}),"\n",(0,o.jsx)(n.li,{children:"can be added to version control if and only if they do not contain\nmachine-dependent information like absolute paths or workspace-specific data."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This is an example of a BSP connection file:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "name": "My Build Tool",\n  "version": "21.3",\n  "bspVersion": "2.0.0",\n  "languages": ["scala", "javascript", "rust"],\n  "argv": ["my-build-tool", "bsp"]\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"default-locations-for-bsp-connection-files",children:"Default Locations for BSP Connection Files"}),"\n",(0,o.jsx)(n.p,{children:"A BSP connection file can be located in a number of locations. BSP connection\nfiles may be located in the project workspace, or for bsp servers installed\nlocally, in a system-wide or user-specific data directory, depending on the\noperating system:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{}),(0,o.jsx)(n.th,{children:"Unix + Mac"}),(0,o.jsx)(n.th,{children:"Windows"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"Workspace"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"<workspace-dir>/.bsp/"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"<workspace-dir>\\.bsp\\"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"User"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"$XDG_DATA_HOME/bsp/"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"%LOCALAPPDATA%\\bsp\\"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"$HOME/Library/Application Support/bsp/"})," (Mac only)"]}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"System"}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"$XDG_DATA_DIRS/bsp/"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"%PROGRAMDATA%\\bsp\\"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{}),(0,o.jsxs)(n.td,{children:[(0,o.jsx)(n.code,{children:"/Library/Application Support/bsp/"})," (Mac only)"]}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsx)(n.p,{children:"Note that:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"<workspace-dir>"})," refers to the workspace base directory."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"$XDG_DATA_HOME"})," and ",(0,o.jsx)(n.code,{children:"$XDG_DATA_DIRS"})," are defined by the\n",(0,o.jsx)(n.a,{href:"https://specifications.freedesktop.org/basedir-spec/basedir-spec-0.6.html",children:"XDG Base Directory Specification"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"%LOCALAPPDATA%"})," and ",(0,o.jsx)(n.code,{children:"%PROGRAMDATA%"})," are defined by the\n",(0,o.jsx)(n.a,{href:"https://docs.microsoft.com/en-gb/windows/desktop/shell/csidl",children:"Windows Documentation"}),"\n(see also:\n",(0,o.jsx)(n.a,{href:"https://docs.microsoft.com/en-gb/windows/desktop/shell/knownfolderid",children:"Default Known Folders"}),")"]}),"\n",(0,o.jsx)(n.li,{children:"on Macs, both standard macOS and Unix directories are supported"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"The workspace location always has higher priority than the user or system\nlocation, so if a client finds a BSP connection file that meets its criteria\ninside a workspace location it must pick it over other BSP connection files in\nthe user or system location."}),"\n",(0,o.jsx)(n.p,{children:"Workspace-defined build tools must not write BSP connection files to the user or\nsystem locations. That location is only reserved for BSP connection files that\ndo not contain any workspace-specific data."}),"\n",(0,o.jsx)(n.h3,{id:"policy-around-connection-files-generation",children:"Policy around Connection Files Generation"}),"\n",(0,o.jsx)(n.p,{children:"To have a successful first-time connection to servers, at least one BSP\nconnection file must exist before users import a project in an IDE or invoke a\nBSP client in a workspace."}),"\n",(0,o.jsx)(n.p,{children:"Build tools installed globally by the user should write a BSP connection file to\nthe system location to minimize the chances that a client doesn't discover it.\nThe BSP connection file should also be deleted when the build tool is\nuninstalled."}),"\n",(0,o.jsx)(n.p,{children:"However, in the more general case, build tools are required to implement a\ncommand to generate a BSP connection file either in the user or system location.\nThis command must be runnable in the workspace base directory."}),"\n",(0,o.jsx)(n.p,{children:"With such command, the following workflows become possible:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Users can manually install a BSP connection file for any build tool."}),"\n",(0,o.jsxs)(n.li,{children:["Clients can implement smart discovery capabilities to:","\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Detect the build tool(s) used in a workspace."}),"\n",(0,o.jsx)(n.li,{children:"Invoke the command to generate a BSP connection file for them."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"These workflows help improve the user experience for clients that want a more\nout-of-the-box experience and provide a escape hatch for users to generate BSP\nconnection files for exotic and unsupported build tools."}),"\n",(0,o.jsx)(n.h3,{id:"build-tool-commands-to-start-bsp-servers",children:"Build Tool Commands to Start BSP Servers"}),"\n",(0,o.jsxs)(n.p,{children:["The most important data field in the connection file is the ",(0,o.jsx)(n.code,{children:"argv"})," JSON field.\nThe ",(0,o.jsx)(n.code,{children:"argv"})," field contains the command arguments that start a BSP server via\nsystem process."]}),"\n",(0,o.jsxs)(n.p,{children:["Clients must meet the following requirements when using ",(0,o.jsx)(n.code,{children:"argv"})," via system\nprocess:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["The first element of the ",(0,o.jsx)(n.code,{children:"argv"})," collection can be a simple name, a relative\npath or an absolute path. A relative path is always relative to the workspace\nbase directory, so the client must prepend the value of the workspace folder\nto the relative path before spawning ",(0,o.jsx)(n.code,{children:"argv"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"argv"})," must always be invoked in the workspace base directory."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"argv"})," must be invoked with the same environment variables of the client."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Build tools must make sure that their ",(0,o.jsx)(n.code,{children:"argv"})," invocation:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Creates a fresh BSP connection to a server every time. This is required in\ncase there is more than one client connecting to a server or a server crashes\nand a client wants to reconnect."}),"\n",(0,o.jsxs)(n.li,{children:["Uses ",(0,o.jsx)(n.code,{children:"stdin"})," to send messages and ",(0,o.jsx)(n.code,{children:"stdout"})," to receive responses to/from the\nBSP server."]}),"\n",(0,o.jsxs)(n.li,{children:["Uses ",(0,o.jsx)(n.code,{children:"stderr"})," to report execution progress to the user."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The use of ",(0,o.jsx)(n.code,{children:"stdin"})," and ",(0,o.jsx)(n.code,{children:"stdout"})," to communicate with the build server simplifies\nthe life of clients and allows build tools to implement their own underlying\nprotocol to connect to a local/remote build tool instance/daemon."]}),"\n",(0,o.jsxs)(n.p,{children:["In addition, build tools can use the ",(0,o.jsx)(n.code,{children:"argv"})," invocation for other purposes such\nas:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Spawn a daemon if it's not already running."}),"\n",(0,o.jsx)(n.li,{children:"Install the build tool if it's not already installed in a user's machine."}),"\n"]}),"\n",(0,o.jsxs)(n.h4,{id:"example-with-my-build-tool",children:["Example with ",(0,o.jsx)(n.code,{children:"my-build-tool"})]}),"\n",(0,o.jsx)(n.p,{children:"To illustrate the responsibilities of the build tool, let's go through a small\nexample where:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"my-build-tool"})," build tool is installed in the user's machine."]}),"\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"argv"})," field is set to ",(0,o.jsx)(n.code,{children:'["my-build-tool", "bsp"]'}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["There is no running build tool instance in a workspace directory\n",(0,o.jsx)(n.code,{children:"<workspace>"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"my-build-tool"})," supports BSP connections with a running instance of the build\ntool via\n",(0,o.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Unix_domain_socket",children:"UNIX domain sockets"})," and\n",(0,o.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/windows/desktop/ipc/named-pipes",children:"Windows Named Pipes"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The invocation of ",(0,o.jsx)(n.code,{children:"my-build-tool bsp"}),", with current working directory\n",(0,o.jsx)(n.code,{children:"<workspace>"}),", will need to:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Run a background process of the build tool for the given ",(0,o.jsx)(n.code,{children:"<workspace>"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"Pick the best way to connect to the running process depending on the machine\nit runs. For example, it would use UNIX sockets in a Linux machine."}),"\n",(0,o.jsx)(n.li,{children:"Fire up a BSP server in the build tool with script-specific connection\ndetails. In the case of Unix sockets, the script will generate the socket\nfile and pass it to the background process of the build tool."}),"\n",(0,o.jsxs)(n.li,{children:["Connect to the running BSP server, forward anything that comes from ",(0,o.jsx)(n.code,{children:"stdin"}),"\nto the BSP server and print anything that comes from the server's output\nstreams to ",(0,o.jsx)(n.code,{children:"stdout"}),". Execution progress will be shown in ",(0,o.jsx)(n.code,{children:"stderr"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["If the build tool is already running for a given project, the ",(0,o.jsx)(n.code,{children:"argv"})," invocation\nwill only perform the last two steps."]}),"\n",(0,o.jsx)(n.h2,{id:"clients-connecting-to-bsp-servers",children:"Clients Connecting to BSP Servers"}),"\n",(0,o.jsx)(n.p,{children:"The BSP Server Discovery aims to simplify clients the process of connecting to\nservers."}),"\n",(0,o.jsx)(n.p,{children:"Clients can connect to servers by locating connection files in the standard BSP\nlocations. BSP clients must look up connection files first in the bsp user\nlocation and, only if the lookup of a connection file meeting certain criteria\nfails, continue the search in the system location."}),"\n",(0,o.jsx)(n.p,{children:"When more than a single BSP connection file is found, BSP clients can use connection\nmetadata to pick only the BSP servers they are interested in. If there are still\nambiguities, BSP clients are free to choose how to react, for example by asking\nthe end user to select a build server. Clients may also make it possible for the user to select\nmultiple connections, effectively having multiple, separate BSP builds running at one time."}),"\n",(0,o.jsx)(n.p,{children:"When no BSP connection file is found (because, for example, the user has not run\nthe build tool command to generate BSP connection details), the BSP client can:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Fail gracefully."}),"\n",(0,o.jsx)(n.li,{children:"Ask users to type the command to generate the BSP connection details with\ntheir preferred build tool and then connect to the BSP server."}),"\n",(0,o.jsx)(n.li,{children:"Discover the build tool used in a project manually, run the command to\ngenerate the BSP connection details and then connect to the BSP server."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["When BSP clients have found a valid connection file, they can connect to the\nserver by running the ",(0,o.jsx)(n.code,{children:"argv"})," invocation via system process; listening to its\nsystem output and writing to its system input. If the ",(0,o.jsx)(n.code,{children:"argv"})," invocation fails,\nthe output in ",(0,o.jsx)(n.code,{children:"stderr"})," must be shown to the user."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},7862:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var o=i(2515);const t={},s=o.createContext(t);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);