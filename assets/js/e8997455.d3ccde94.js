"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[632],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>v});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),m=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=m(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=m(t),d=i,v=p["".concat(l,".").concat(d)]||p[d]||c[d]||a;return t?r.createElement(v,o(o({ref:n},u),{},{components:t})):r.createElement(v,o({ref:n},u))}));function v(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var m=2;m<a;m++)o[m]=t[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3391:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>m,toc:()=>p});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),o=["components"],s={id:"jvm",title:"JVM Extension",sidebar_label:"JVM"},l=void 0,m={unversionedId:"extensions/jvm",id:"extensions/jvm",title:"JVM Extension",description:"The following section contains JVM-specific extensions to the build server",source:"@site/target/docs/extensions/jvm.md",sourceDirName:"extensions",slug:"/extensions/jvm",permalink:"/docs/extensions/jvm",draft:!1,editUrl:"https://github.com/build-server-protocol/build-server-protocol/edit/master/docs/extensions/jvm.md",tags:[],version:"current",frontMatter:{id:"jvm",title:"JVM Extension",sidebar_label:"JVM"},sidebar:"docs",previous:{title:"Java",permalink:"/docs/extensions/java"},next:{title:"Maven",permalink:"/docs/extensions/maven"}},u={},p=[{value:"JVM Build Target",id:"jvm-build-target",level:2},{value:"Test Environment Request",id:"test-environment-request",level:2},{value:"Run Environment Request",id:"run-environment-request",level:2}],c={toc:p};function d(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The following section contains JVM-specific extensions to the build server\nprotocol."),(0,a.kt)("h2",{id:"jvm-build-target"},"JVM Build Target"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"JvmBuildTarget")," is a basic data structure that contains jvm-specific\nmetadata, specifically JDK reference. This metadata is embedded in\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"data: Option[Json]")," field of the ",(0,a.kt)("inlineCode",{parentName:"p"},"BuildTarget")," definition, when\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"dataKind"),' field contains "jvm".'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface JvmBuildTarget {\n  /** Uri representing absolute path to jdk\n   * For example: file:///usr/lib/jvm/java-8-openjdk-amd64 */\n  javaHome?: Uri;\n\n  /** The java version this target is supposed to use.\n   * For example: 1.8 */\n  javaVersion?: String;\n}\n")),(0,a.kt)("h2",{id:"test-environment-request"},"Test Environment Request"),(0,a.kt)("p",null,"The JVM test environment request is sent from the client to the server in order to\ngather information required to launch a Java process. This is useful when the\nclient wants to control the Java process execution, for example to enable custom\nJava agents or launch a custom main class during unit testing or debugging"),(0,a.kt)("p",null,"The data provided by this endpoint may change between compilations, so it should\nnot be cached in any form. The client should ask for it right before test execution,\nafter all the targets are compiled."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"method: ",(0,a.kt)("inlineCode",{parentName:"li"},"buildTarget/jvmTestEnvironment")),(0,a.kt)("li",{parentName:"ul"},"params: ",(0,a.kt)("inlineCode",{parentName:"li"},"JvmTestEnvironmentParams"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface JvmTestEnvironmentParams(\n    targets: BuildTargetIdentifier[],\n    originId?: String\n)\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"result: ",(0,a.kt)("inlineCode",{parentName:"li"},"JvmTestEnvironmentResult"),", defined as follows"),(0,a.kt)("li",{parentName:"ul"},"error: JSON-RPC code and message set in case an exception happens during the\nrequest.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface JvmMainClass {\n  class: String;\n  arguments: String[];\n}\n\nexport interface JvmEnvironmentItem {\n  target: BuildTargetIdentifier;\n  classpath: Uri[];\n  jvmOptions: String[];\n  workingDirectory: String;\n  environmentVariables: Map<String, String>;\n  mainClasses: JvmMainClass[];\n}\n\nexport interface JvmTestEnvironmentResult {\n  items: JvmEnvironmentItem[];\n}\n")),(0,a.kt)("h2",{id:"run-environment-request"},"Run Environment Request"),(0,a.kt)("p",null,"Similar to ",(0,a.kt)("inlineCode",{parentName:"p"},"buildTarget/jvmTestEnvironment"),", but returns environment\nthat should be used for regular exection of main classes, not for testing"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"method: ",(0,a.kt)("inlineCode",{parentName:"li"},"buildTarget/jvmRunEnvironment")),(0,a.kt)("li",{parentName:"ul"},"params: ",(0,a.kt)("inlineCode",{parentName:"li"},"JvmRunEnvironmentParams"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface JvmRunEnvironmentParams(\n    targets: BuildTargetIdentifier[],\n    originId?: String\n)\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"result: ",(0,a.kt)("inlineCode",{parentName:"li"},"JvmRunEnvironmentResult"),", defined as follows"),(0,a.kt)("li",{parentName:"ul"},"error: JSON-RPC code and message set in case an exception happens during the\nrequest.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface JvmMainClass {\n  class: String;\n  arguments: String[];\n}\n\nexport interface JvmEnvironmentItem {\n  target: BuildTargetIdentifier;\n  classpath: Uri[];\n  jvmOptions: String[];\n  workingDirectory: String;\n  environmentVariables: Map<String, String>;\n  mainClasses: JvmMainClass[];\n}\n\nexport interface JvmRunEnvironmentResult {\n  items: JvmEnvironmentItem[];\n}\n")))}d.isMDXComponent=!0}}]);