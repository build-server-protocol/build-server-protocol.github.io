"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[728],{324:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var s=t(3955),i=t(8379);const r={id:"jvm",title:"JVM Extension",sidebar_label:"JVM"},a=void 0,l={id:"extensions/jvm",title:"JVM Extension",description:"The following section contains JVM-specific extensions to the build server",source:"@site/generated/extensions/jvm.md",sourceDirName:"extensions",slug:"/extensions/jvm",permalink:"/docs/extensions/jvm",draft:!1,unlisted:!1,editUrl:"https://github.com/build-server-protocol/build-server-protocol/edit/master/docs/extensions/jvm.md",tags:[],version:"current",frontMatter:{id:"jvm",title:"JVM Extension",sidebar_label:"JVM"},sidebar:"docs",previous:{title:"Java",permalink:"/docs/extensions/java"},next:{title:"Maven",permalink:"/docs/extensions/maven"}},m={},o=[{value:"BSP version",id:"bsp-version",level:2},{value:"BSP Server remote interface",id:"bsp-server-remote-interface",level:2},{value:"BuildTargetJvmTestEnvironment: request",id:"buildtargetjvmtestenvironment-request",level:3},{value:"JvmTestEnvironmentParams",id:"jvmtestenvironmentparams",level:4},{value:"JvmTestEnvironmentResult",id:"jvmtestenvironmentresult",level:4},{value:"JvmEnvironmentItem",id:"jvmenvironmentitem",level:4},{value:"JvmMainClass",id:"jvmmainclass",level:4},{value:"BuildTargetJvmRunEnvironment: request",id:"buildtargetjvmrunenvironment-request",level:3},{value:"JvmRunEnvironmentParams",id:"jvmrunenvironmentparams",level:4},{value:"JvmRunEnvironmentResult",id:"jvmrunenvironmentresult",level:4},{value:"BuildTargetJvmCompileClasspath: request",id:"buildtargetjvmcompileclasspath-request",level:3},{value:"JvmCompileClasspathParams",id:"jvmcompileclasspathparams",level:4},{value:"JvmCompileClasspathResult",id:"jvmcompileclasspathresult",level:4},{value:"JvmCompileClasspathItem",id:"jvmcompileclasspathitem",level:4},{value:"BuildTargetData kinds",id:"buildtargetdata-kinds",level:2},{value:"JvmBuildTarget",id:"jvmbuildtarget",level:3},{value:"JvmBuildTarget",id:"jvmbuildtarget-1",level:4}];function d(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"The following section contains JVM-specific extensions to the build server\nprotocol."}),"\n",(0,s.jsx)(n.h2,{id:"bsp-version",children:"BSP version"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"2.2.0"})}),"\n",(0,s.jsx)(n.h2,{id:"bsp-server-remote-interface",children:"BSP Server remote interface"}),"\n",(0,s.jsx)(n.h3,{id:"buildtargetjvmtestenvironment-request",children:"BuildTargetJvmTestEnvironment: request"}),"\n",(0,s.jsx)(n.p,{children:"The JVM test environment request is sent from the client to the server in order to\ngather information required to launch a Java process. This is useful when the\nclient wants to control the Java process execution, for example to enable custom\nJava agents or launch a custom main class during unit testing or debugging"}),"\n",(0,s.jsx)(n.p,{children:"The data provided by this endpoint may change between compilations, so it should\nnot be cached in any form. The client should ask for it right before test execution,\nafter all the targets are compiled."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["method: ",(0,s.jsx)(n.code,{children:"buildTarget/jvmTestEnvironment"})]}),"\n",(0,s.jsxs)(n.li,{children:["params: ",(0,s.jsx)(n.code,{children:"JvmTestEnvironmentParams"})]}),"\n",(0,s.jsxs)(n.li,{children:["result: ",(0,s.jsx)(n.code,{children:"JvmTestEnvironmentResult"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"jvmtestenvironmentparams",children:"JvmTestEnvironmentParams"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface JvmTestEnvironmentParams {\n  targets: BuildTargetIdentifier[];\n\n  originId?: Identifier;\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"jvmtestenvironmentresult",children:"JvmTestEnvironmentResult"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface JvmTestEnvironmentResult {\n  items: JvmEnvironmentItem[];\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"jvmenvironmentitem",children:"JvmEnvironmentItem"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface JvmEnvironmentItem {\n  target: BuildTargetIdentifier;\n\n  classpath: string[];\n\n  jvmOptions: string[];\n\n  workingDirectory: string;\n\n  environmentVariables: EnvironmentVariables;\n\n  mainClasses?: JvmMainClass[];\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"jvmmainclass",children:"JvmMainClass"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface JvmMainClass {\n  className: string;\n\n  arguments: string[];\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"buildtargetjvmrunenvironment-request",children:"BuildTargetJvmRunEnvironment: request"}),"\n",(0,s.jsxs)(n.p,{children:["Similar to ",(0,s.jsx)(n.code,{children:"buildTarget/jvmTestEnvironment"}),", but returns environment\nthat should be used for regular exection of main classes, not for testing"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["method: ",(0,s.jsx)(n.code,{children:"buildTarget/jvmRunEnvironment"})]}),"\n",(0,s.jsxs)(n.li,{children:["params: ",(0,s.jsx)(n.code,{children:"JvmRunEnvironmentParams"})]}),"\n",(0,s.jsxs)(n.li,{children:["result: ",(0,s.jsx)(n.code,{children:"JvmRunEnvironmentResult"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"jvmrunenvironmentparams",children:"JvmRunEnvironmentParams"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface JvmRunEnvironmentParams {\n  targets: BuildTargetIdentifier[];\n\n  originId?: Identifier;\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"jvmrunenvironmentresult",children:"JvmRunEnvironmentResult"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface JvmRunEnvironmentResult {\n  items: JvmEnvironmentItem[];\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"buildtargetjvmcompileclasspath-request",children:"BuildTargetJvmCompileClasspath: request"}),"\n",(0,s.jsx)(n.p,{children:"The build target classpath request is sent from the client to the server to\nquery the target for its compile classpath."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["method: ",(0,s.jsx)(n.code,{children:"buildTarget/jvmCompileClasspath"})]}),"\n",(0,s.jsxs)(n.li,{children:["params: ",(0,s.jsx)(n.code,{children:"JvmCompileClasspathParams"})]}),"\n",(0,s.jsxs)(n.li,{children:["result: ",(0,s.jsx)(n.code,{children:"JvmCompileClasspathResult"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"jvmcompileclasspathparams",children:"JvmCompileClasspathParams"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface JvmCompileClasspathParams {\n  targets: BuildTargetIdentifier[];\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"jvmcompileclasspathresult",children:"JvmCompileClasspathResult"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface JvmCompileClasspathResult {\n  items: JvmCompileClasspathItem[];\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"jvmcompileclasspathitem",children:"JvmCompileClasspathItem"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface JvmCompileClasspathItem {\n  target: BuildTargetIdentifier;\n\n  /** The dependency classpath for this target, must be\n   * identical to what is passed as arguments to\n   * the -classpath flag in the command line interface\n   * of scalac. */\n  classpath: string[];\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"buildtargetdata-kinds",children:"BuildTargetData kinds"}),"\n",(0,s.jsx)(n.h3,{id:"jvmbuildtarget",children:"JvmBuildTarget"}),"\n",(0,s.jsxs)(n.p,{children:["This structure is embedded in\nthe ",(0,s.jsx)(n.code,{children:"data?: BuildTargetData"})," field, when\nthe ",(0,s.jsx)(n.code,{children:"dataKind"})," field contains ",(0,s.jsx)(n.code,{children:'"jvm"'}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"jvmbuildtarget-1",children:"JvmBuildTarget"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"JvmBuildTarget"})," is a basic data structure that contains jvm-specific\nmetadata, specifically JDK reference."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface JvmBuildTarget {\n  /** Uri representing absolute path to jdk\n   * For example: file:///usr/lib/jvm/java-8-openjdk-amd64 */\n  javaHome?: URI;\n\n  /** The java version this target is supposed to use (can be set using javac `-target` flag).\n   * For example: 1.8 */\n  javaVersion?: string;\n}\n"})})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8379:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(2515);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);