"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[105],{7681:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var t=a(3955),n=a(8379);const i={id:"scala",title:"Scala Extension",sidebar_label:"Scala"},l=void 0,c={id:"extensions/scala",title:"Scala Extension",description:"The following section contains Scala-specific extensions to the build server",source:"@site/generated/extensions/scala.md",sourceDirName:"extensions",slug:"/extensions/scala",permalink:"/docs/extensions/scala",draft:!1,unlisted:!1,editUrl:"https://github.com/build-server-protocol/build-server-protocol/edit/master/docs/extensions/scala.md",tags:[],version:"current",frontMatter:{id:"scala",title:"Scala Extension",sidebar_label:"Scala"},sidebar:"docs",previous:{title:"sbt",permalink:"/docs/extensions/sbt"},next:{title:"Java",permalink:"/docs/bindings/java"}},r={},d=[{value:"BSP version",id:"bsp-version",level:2},{value:"BSP Server remote interface",id:"bsp-server-remote-interface",level:2},{value:"BuildTargetScalacOptions: request",id:"buildtargetscalacoptions-request",level:3},{value:"ScalacOptionsParams",id:"scalacoptionsparams",level:4},{value:"ScalacOptionsResult",id:"scalacoptionsresult",level:4},{value:"ScalacOptionsItem",id:"scalacoptionsitem",level:4},{value:"BuildTargetScalaTestClasses: request",id:"buildtargetscalatestclasses-request",level:3},{value:"ScalaTestClassesParams",id:"scalatestclassesparams",level:4},{value:"ScalaTestClassesResult",id:"scalatestclassesresult",level:4},{value:"ScalaTestClassesItem",id:"scalatestclassesitem",level:4},{value:"BuildTargetScalaMainClasses: request",id:"buildtargetscalamainclasses-request",level:3},{value:"ScalaMainClassesParams",id:"scalamainclassesparams",level:4},{value:"ScalaMainClassesResult",id:"scalamainclassesresult",level:4},{value:"ScalaMainClassesItem",id:"scalamainclassesitem",level:4},{value:"ScalaMainClass",id:"scalamainclass",level:4},{value:"BuildTargetData kinds",id:"buildtargetdata-kinds",level:2},{value:"ScalaBuildTarget",id:"scalabuildtarget",level:3},{value:"ScalaBuildTarget",id:"scalabuildtarget-1",level:4},{value:"ScalaPlatform",id:"scalaplatform",level:4},{value:"DebugSessionParamsData kinds",id:"debugsessionparamsdata-kinds",level:2},{value:"ScalaAttachRemote",id:"scalaattachremote",level:3},{value:"ScalaAttachRemote",id:"scalaattachremote-1",level:4},{value:"ScalaMainClass",id:"scalamainclass-1",level:3},{value:"DiagnosticData kinds",id:"diagnosticdata-kinds",level:2},{value:"ScalaDiagnostic",id:"scaladiagnostic",level:3},{value:"ScalaDiagnostic",id:"scaladiagnostic-1",level:4},{value:"ScalaAction",id:"scalaaction",level:4},{value:"ScalaWorkspaceEdit",id:"scalaworkspaceedit",level:4},{value:"ScalaTextEdit",id:"scalatextedit",level:4},{value:"RunParamsData kinds",id:"runparamsdata-kinds",level:2},{value:"ScalaMainClass",id:"scalamainclass-2",level:3},{value:"TestParamsData kinds",id:"testparamsdata-kinds",level:2},{value:"ScalaTestParams",id:"scalatestparams",level:3},{value:"ScalaTestParams",id:"scalatestparams-1",level:4},{value:"ScalaTestSuiteClasses",id:"scalatestsuiteclasses",level:3},{value:"ScalaTestSuiteClasses",id:"scalatestsuiteclasses-1",level:4},{value:"ScalaTestSuites",id:"scalatestsuites",level:3},{value:"ScalaTestSuites",id:"scalatestsuites-1",level:4},{value:"ScalaTestSuiteSelection",id:"scalatestsuiteselection",level:4}];function o(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.p,{children:"The following section contains Scala-specific extensions to the build server\nprotocol."}),"\n",(0,t.jsx)(s.h2,{id:"bsp-version",children:"BSP version"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"2.2.0"})}),"\n",(0,t.jsx)(s.h2,{id:"bsp-server-remote-interface",children:"BSP Server remote interface"}),"\n",(0,t.jsx)(s.h3,{id:"buildtargetscalacoptions-request",children:"BuildTargetScalacOptions: request"}),"\n",(0,t.jsx)(s.p,{children:"The build target scalac options request is sent from the client to the server to\nquery for the list of compiler options necessary to compile in a given list of\ntargets."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["method: ",(0,t.jsx)(s.code,{children:"buildTarget/scalacOptions"})]}),"\n",(0,t.jsxs)(s.li,{children:["params: ",(0,t.jsx)(s.code,{children:"ScalacOptionsParams"})]}),"\n",(0,t.jsxs)(s.li,{children:["result: ",(0,t.jsx)(s.code,{children:"ScalacOptionsResult"})]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"scalacoptionsparams",children:"ScalacOptionsParams"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalacOptionsParams {\n  targets: BuildTargetIdentifier[];\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"scalacoptionsresult",children:"ScalacOptionsResult"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalacOptionsResult {\n  items: ScalacOptionsItem[];\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"scalacoptionsitem",children:"ScalacOptionsItem"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalacOptionsItem {\n  target: BuildTargetIdentifier;\n\n  /** Additional arguments to the compiler.\n   * For example, -deprecation. */\n  options: string[];\n\n  /** The dependency classpath for this target, must be\n   * identical to what is passed as arguments to\n   * the -classpath flag in the command line interface\n   * of scalac.\n   * Deprecated: When the jvmCompileClasspath capability is supported, this might be empty and the buildTarget/jvmCompileClasspath endpoint should be used instead. */\n  classpath: string[];\n\n  /** The output directory for classfiles produced by this target */\n  classDirectory: string;\n}\n"})}),"\n",(0,t.jsx)(s.h3,{id:"buildtargetscalatestclasses-request",children:"BuildTargetScalaTestClasses: request"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Deprecated"}),": Use buildTarget/jvmTestEnvironment instead"]}),"\n",(0,t.jsx)(s.p,{children:"The Scala build target test classes request is sent from the client to the\nserver to query for the list of fully qualified names of test classes in a given\nlist of targets."}),"\n",(0,t.jsx)(s.p,{children:"This method can for example be used by a client to:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Show a list of the discovered classes that can be tested."}),"\n",(0,t.jsxs)(s.li,{children:['Attach a "Run test suite" button above the definition of a test suite via\n',(0,t.jsx)(s.code,{children:"textDocument/codeLens"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["(To render the code lens, the language server needs to map the fully qualified\nnames of the test targets to the defining source file via\n",(0,t.jsx)(s.code,{children:"textDocument/definition"}),". Then, once users click on the button, the language\nserver can pass the fully qualified name of the test class as an argument to the\n",(0,t.jsx)(s.code,{children:"buildTarget/test"})," request.)"]}),"\n",(0,t.jsxs)(s.p,{children:["This request may trigger a compilation on the selected build targets. The server\nis free to send any number of ",(0,t.jsx)(s.code,{children:"build/task*"}),", ",(0,t.jsx)(s.code,{children:"build/publishDiagnostics"})," and\n",(0,t.jsx)(s.code,{children:"build/logMessage"})," notifications during compilation before completing the\nresponse."]}),"\n",(0,t.jsxs)(s.p,{children:["The client will get a ",(0,t.jsx)(s.code,{children:"originId"})," field in ",(0,t.jsx)(s.code,{children:"ScalaTestClassesResult"})," if the\n",(0,t.jsx)(s.code,{children:"originId"})," field in the ",(0,t.jsx)(s.code,{children:"ScalaTestClassesParams"})," is defined."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["method: ",(0,t.jsx)(s.code,{children:"buildTarget/scalaTestClasses"})]}),"\n",(0,t.jsxs)(s.li,{children:["params: ",(0,t.jsx)(s.code,{children:"ScalaTestClassesParams"})]}),"\n",(0,t.jsxs)(s.li,{children:["result: ",(0,t.jsx)(s.code,{children:"ScalaTestClassesResult"})]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"scalatestclassesparams",children:"ScalaTestClassesParams"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaTestClassesParams {\n  targets: BuildTargetIdentifier[];\n\n  /** An optional number uniquely identifying a client request. */\n  originId?: string;\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"scalatestclassesresult",children:"ScalaTestClassesResult"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaTestClassesResult {\n  /** An optional id of the request that triggered this result. */\n  items: ScalaTestClassesItem[];\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"scalatestclassesitem",children:"ScalaTestClassesItem"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaTestClassesItem {\n  /** The build target that contains the test classes. */\n  target: BuildTargetIdentifier;\n\n  /** Name of the the framework to which classes belong.\n   * It's optional in order to maintain compatibility, however it is expected\n   * from the newer implementations to not leave that field unspecified. */\n  framework?: string;\n\n  /** The fully qualified names of the test classes in this target */\n  classes: string[];\n}\n"})}),"\n",(0,t.jsx)(s.h3,{id:"buildtargetscalamainclasses-request",children:"BuildTargetScalaMainClasses: request"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Deprecated"}),": Use buildTarget/jvmRunEnvironment instead"]}),"\n",(0,t.jsxs)(s.p,{children:["The build target main classes request is sent from the client to the server to\nquery for the list of main classes that can be fed as arguments to\n",(0,t.jsx)(s.code,{children:"buildTarget/run"}),". This method can be used for the same use cases than the\n",(0,t.jsx)(s.a,{href:"#buildtargetscalatestclasses-request",children:"Scala Test Classes Request"})," enables.\nThis request may trigger a compilation on the selected build targets. The server\nis free to send any number of ",(0,t.jsx)(s.code,{children:"build/taskStart"}),", ",(0,t.jsx)(s.code,{children:"build/taskProgress"}),",\n",(0,t.jsx)(s.code,{children:"build/taskFinish"}),", ",(0,t.jsx)(s.code,{children:"build/publishDiagnostics"})," and ",(0,t.jsx)(s.code,{children:"build/logMessage"}),"\nnotifications during compilation before completing the response.\nThe client will get a ",(0,t.jsx)(s.code,{children:"originId"})," field in ",(0,t.jsx)(s.code,{children:"ScalaMainClassesResult"})," if the\n",(0,t.jsx)(s.code,{children:"originId"})," field in the ",(0,t.jsx)(s.code,{children:"ScalaMainClassesParams"})," is defined."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["method: ",(0,t.jsx)(s.code,{children:"buildTarget/scalaMainClasses"})]}),"\n",(0,t.jsxs)(s.li,{children:["params: ",(0,t.jsx)(s.code,{children:"ScalaMainClassesParams"})]}),"\n",(0,t.jsxs)(s.li,{children:["result: ",(0,t.jsx)(s.code,{children:"ScalaMainClassesResult"})]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"scalamainclassesparams",children:"ScalaMainClassesParams"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaMainClassesParams {\n  targets: BuildTargetIdentifier[];\n\n  /** An optional number uniquely identifying a client request. */\n  originId?: string;\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"scalamainclassesresult",children:"ScalaMainClassesResult"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaMainClassesResult {\n  items: ScalaMainClassesItem[];\n\n  /** An optional id of the request that triggered this result. */\n  originId?: string;\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"scalamainclassesitem",children:"ScalaMainClassesItem"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaMainClassesItem {\n  /** The build target that contains the test classes. */\n  target: BuildTargetIdentifier;\n\n  /** The main class item. */\n  classes: ScalaMainClass[];\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"scalamainclass",children:"ScalaMainClass"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaMainClass {\n  /** The main class to run. */\n  className: string;\n\n  /** The user arguments to the main entrypoint.\n   * Deprecated: Use `buildTarget/run` params instead */\n  arguments: string[];\n\n  /** The jvm options for the application. */\n  jvmOptions: string[];\n\n  /** The environment variables for the application.\n   * Deprecated: Use `buildTarget/run` params instead */\n  environmentVariables?: string[];\n}\n"})}),"\n",(0,t.jsx)(s.h2,{id:"buildtargetdata-kinds",children:"BuildTargetData kinds"}),"\n",(0,t.jsx)(s.h3,{id:"scalabuildtarget",children:"ScalaBuildTarget"}),"\n",(0,t.jsxs)(s.p,{children:["This structure is embedded in\nthe ",(0,t.jsx)(s.code,{children:"data?: BuildTargetData"})," field, when\nthe ",(0,t.jsx)(s.code,{children:"dataKind"})," field contains ",(0,t.jsx)(s.code,{children:'"scala"'}),"."]}),"\n",(0,t.jsx)(s.h4,{id:"scalabuildtarget-1",children:"ScalaBuildTarget"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"ScalaBuildTarget"})," is a basic data structure that contains scala-specific\nmetadata for compiling a target containing Scala sources."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaBuildTarget {\n  /** The Scala organization that is used for a target. */\n  scalaOrganization: string;\n\n  /** The scala version to compile this target */\n  scalaVersion: string;\n\n  /** The binary version of scalaVersion.\n   * For example, 2.12 if scalaVersion is 2.12.4. */\n  scalaBinaryVersion: string;\n\n  /** The target platform for this target */\n  platform: ScalaPlatform;\n\n  /** A sequence of Scala jars such as scala-library, scala-compiler and scala-reflect. */\n  jars: URI[];\n\n  /** The jvm build target describing jdk to be used */\n  jvmBuildTarget?: JvmBuildTarget;\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"scalaplatform",children:"ScalaPlatform"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export enum ScalaPlatform {\n  Jvm = 1,\n\n  Js = 2,\n\n  Native = 3,\n}\n"})}),"\n",(0,t.jsx)(s.h2,{id:"debugsessionparamsdata-kinds",children:"DebugSessionParamsData kinds"}),"\n",(0,t.jsx)(s.h3,{id:"scalaattachremote",children:"ScalaAttachRemote"}),"\n",(0,t.jsxs)(s.p,{children:["This structure is embedded in\nthe ",(0,t.jsx)(s.code,{children:"data?: DebugSessionParamsData"})," field, when\nthe ",(0,t.jsx)(s.code,{children:"dataKind"})," field contains ",(0,t.jsx)(s.code,{children:'"scala-attach-remote"'}),"."]}),"\n",(0,t.jsx)(s.h4,{id:"scalaattachremote-1",children:"ScalaAttachRemote"}),"\n",(0,t.jsx)(s.p,{children:"The debug session will connect to a running process. The DAP client will send the port of the running process later."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaAttachRemote {}\n"})}),"\n",(0,t.jsx)(s.h3,{id:"scalamainclass-1",children:"ScalaMainClass"}),"\n",(0,t.jsxs)(s.p,{children:["This structure is embedded in\nthe ",(0,t.jsx)(s.code,{children:"data?: DebugSessionParamsData"})," field, when\nthe ",(0,t.jsx)(s.code,{children:"dataKind"})," field contains ",(0,t.jsx)(s.code,{children:'"scala-main-class"'}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"diagnosticdata-kinds",children:"DiagnosticData kinds"}),"\n",(0,t.jsx)(s.h3,{id:"scaladiagnostic",children:"ScalaDiagnostic"}),"\n",(0,t.jsxs)(s.p,{children:["This structure is embedded in\nthe ",(0,t.jsx)(s.code,{children:"data?: DiagnosticData"})," field, when\nthe ",(0,t.jsx)(s.code,{children:"dataKind"})," field contains ",(0,t.jsx)(s.code,{children:'"scala"'}),"."]}),"\n",(0,t.jsx)(s.h4,{id:"scaladiagnostic-1",children:"ScalaDiagnostic"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"ScalaDiagnostic"})," is a data structure that contains Scala-specific\nmetadata generated by Scala compilation."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaDiagnostic {\n  /** Actions (also known as quick fixes) that are able to either fix or address\n   * the issue that is causing this diagnostic. */\n  actions?: ScalaAction[];\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"scalaaction",children:"ScalaAction"}),"\n",(0,t.jsxs)(s.p,{children:["A Scala action represents a change that can be performed in code.\nSee also ",(0,t.jsx)(s.a,{href:"https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_codeAction",children:"LSP: Code Action Request"}),"."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note"}),": In LSP, ",(0,t.jsx)(s.code,{children:"CodeAction"})," appears only as a response to a ",(0,t.jsx)(s.code,{children:"textDocument/codeAction"})," request,\nwhereas ScalaAction is intended to be returned as ",(0,t.jsx)(s.code,{children:"Diagnostics.data.actions"}),"."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaAction {\n  /** A short, human-readable, title for this code action. */\n  title: string;\n\n  /** A description that may be shown to the user client side to explain the action. */\n  description?: string;\n\n  /** The workspace edit this code action performs. */\n  edit?: ScalaWorkspaceEdit;\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"scalaworkspaceedit",children:"ScalaWorkspaceEdit"}),"\n",(0,t.jsx)(s.p,{children:"A workspace edit represents changes to many resources managed in the workspace."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaWorkspaceEdit {\n  changes: ScalaTextEdit[];\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"scalatextedit",children:"ScalaTextEdit"}),"\n",(0,t.jsx)(s.p,{children:"A textual edit applicable to a text document."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaTextEdit {\n  /** The range of the text document to be manipulated. To insert\n   * text into a document create a range where start === end. */\n  range: Range;\n\n  /** The string to be inserted. For delete operations use an\n   * empty string. */\n  newText: string;\n}\n"})}),"\n",(0,t.jsx)(s.h2,{id:"runparamsdata-kinds",children:"RunParamsData kinds"}),"\n",(0,t.jsx)(s.h3,{id:"scalamainclass-2",children:"ScalaMainClass"}),"\n",(0,t.jsxs)(s.p,{children:["This structure is embedded in\nthe ",(0,t.jsx)(s.code,{children:"data?: RunParamsData"})," field, when\nthe ",(0,t.jsx)(s.code,{children:"dataKind"})," field contains ",(0,t.jsx)(s.code,{children:'"scala-main-class"'}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"testparamsdata-kinds",children:"TestParamsData kinds"}),"\n",(0,t.jsx)(s.h3,{id:"scalatestparams",children:"ScalaTestParams"}),"\n",(0,t.jsxs)(s.p,{children:["This structure is embedded in\nthe ",(0,t.jsx)(s.code,{children:"data?: TestParamsData"})," field, when\nthe ",(0,t.jsx)(s.code,{children:"dataKind"})," field contains ",(0,t.jsx)(s.code,{children:'"scala-test"'}),"."]}),"\n",(0,t.jsx)(s.h4,{id:"scalatestparams-1",children:"ScalaTestParams"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.code,{children:"ScalaTestParams"})," contains scala-specific metadata for testing Scala targets."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaTestParams {\n  /** The test classes to be run in this test execution.\n   * It is the result of `buildTarget/scalaTestClasses`. */\n  testClasses?: ScalaTestClassesItem[];\n\n  /** The JVM options to run tests with. They replace any options\n   * that are defined by the build server if defined. */\n  jvmOptions?: string[];\n}\n"})}),"\n",(0,t.jsx)(s.h3,{id:"scalatestsuiteclasses",children:"ScalaTestSuiteClasses"}),"\n",(0,t.jsxs)(s.p,{children:["This structure is embedded in\nthe ",(0,t.jsx)(s.code,{children:"data?: TestParamsData"})," field, when\nthe ",(0,t.jsx)(s.code,{children:"dataKind"})," field contains ",(0,t.jsx)(s.code,{children:'"scala-test-suites"'}),"."]}),"\n",(0,t.jsx)(s.h4,{id:"scalatestsuiteclasses-1",children:"ScalaTestSuiteClasses"}),"\n",(0,t.jsx)(s.p,{children:"Each element of this array is a fully qualified class name."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export type ScalaTestSuiteClasses = string[];\n"})}),"\n",(0,t.jsx)(s.h3,{id:"scalatestsuites",children:"ScalaTestSuites"}),"\n",(0,t.jsxs)(s.p,{children:["This structure is embedded in\nthe ",(0,t.jsx)(s.code,{children:"data?: TestParamsData"})," field, when\nthe ",(0,t.jsx)(s.code,{children:"dataKind"})," field contains ",(0,t.jsx)(s.code,{children:'"scala-test-suites-selection"'}),"."]}),"\n",(0,t.jsx)(s.h4,{id:"scalatestsuites-1",children:"ScalaTestSuites"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaTestSuites {\n  /** The fully qualified names of the test classes in this target and the tests in this test classes */\n  suites: ScalaTestSuiteSelection[];\n\n  /** Additional jvmOptions which will be passed to the forked JVM */\n  jvmOptions: string[];\n\n  /** Enviroment variables should be an array of strings in format KEY=VALUE\n   * Deprecated: Use `buildTarget/test` params instead */\n  environmentVariables: string[];\n}\n"})}),"\n",(0,t.jsx)(s.h4,{id:"scalatestsuiteselection",children:"ScalaTestSuiteSelection"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-ts",children:"export interface ScalaTestSuiteSelection {\n  /** Fully qualified name of the test suite class */\n  className: string;\n\n  /** List of tests which should be run within this test suite.\n   * Empty collection means that all of them are supposed to be executed. */\n  tests: string[];\n}\n"})})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8379:(e,s,a)=>{a.d(s,{R:()=>l,x:()=>c});var t=a(2515);const n={},i=t.createContext(n);function l(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);