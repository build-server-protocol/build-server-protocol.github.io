"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[574],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),b=i,f=c["".concat(s,".").concat(b)]||c[b]||u[b]||a;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var d=2;d<a;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},9418:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>b,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={id:"sbt",title:"sbt Extension",sidebar_label:"sbt"},s=void 0,d={unversionedId:"extensions/sbt",id:"extensions/sbt",title:"sbt Extension",description:"The following section contains sbt-specific extensions to the build server",source:"@site/target/docs/extensions/sbt.md",sourceDirName:"extensions",slug:"/extensions/sbt",permalink:"/docs/extensions/sbt",draft:!1,editUrl:"https://github.com/build-server-protocol/build-server-protocol/edit/master/docs/extensions/sbt.md",tags:[],version:"current",frontMatter:{id:"sbt",title:"sbt Extension",sidebar_label:"sbt"},sidebar:"docs",previous:{title:"Python",permalink:"/docs/extensions/python"},next:{title:"Scala",permalink:"/docs/extensions/scala"}},p={},c=[{value:"BSP version",id:"bsp-version",level:2},{value:"BuildTargetData kinds",id:"buildtargetdata-kinds",level:2},{value:"SbtBuildTarget",id:"sbtbuildtarget",level:3},{value:"SbtBuildTarget",id:"sbtbuildtarget-1",level:4}],u={toc:c};function b(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The following section contains sbt-specific extensions to the build server\nprotocol. This extension allows BSP clients to provide language support for sbt\nbuild files."),(0,a.kt)("h2",{id:"bsp-version"},"BSP version"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"2.1.0")),(0,a.kt)("h2",{id:"buildtargetdata-kinds"},"BuildTargetData kinds"),(0,a.kt)("h3",{id:"sbtbuildtarget"},"SbtBuildTarget"),(0,a.kt)("p",null,"This structure is embedded in\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"data?: BuildTargetData")," field, when\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"dataKind")," field contains ",(0,a.kt)("inlineCode",{parentName:"p"},'"sbt"'),"."),(0,a.kt)("h4",{id:"sbtbuildtarget-1"},"SbtBuildTarget"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"SbtBuildTarget")," is a basic data structure that contains sbt-specific metadata\nfor providing editor support for sbt build files."),(0,a.kt)("p",null,"For example, say we have a project in ",(0,a.kt)("inlineCode",{parentName:"p"},"/foo/bar")," defining projects ",(0,a.kt)("inlineCode",{parentName:"p"},"A")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"B"),"\nand two meta builds ",(0,a.kt)("inlineCode",{parentName:"p"},"M1")," (defined in ",(0,a.kt)("inlineCode",{parentName:"p"},"/foo/bar/project"),") and ",(0,a.kt)("inlineCode",{parentName:"p"},"M2")," (defined in\n",(0,a.kt)("inlineCode",{parentName:"p"},"/foo/bar/project/project"),")."),(0,a.kt)("p",null,"The sbt build target for ",(0,a.kt)("inlineCode",{parentName:"p"},"M1")," will have ",(0,a.kt)("inlineCode",{parentName:"p"},"A")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"B")," as the defined targets and\n",(0,a.kt)("inlineCode",{parentName:"p"},"M2")," as the parent. Similarly, the sbt build target for ",(0,a.kt)("inlineCode",{parentName:"p"},"M2")," will have ",(0,a.kt)("inlineCode",{parentName:"p"},"M1")," as\nthe defined target and no parent."),(0,a.kt)("p",null,"Clients can use this information to reconstruct the tree of sbt meta builds. The\n",(0,a.kt)("inlineCode",{parentName:"p"},"parent")," information can be defined from ",(0,a.kt)("inlineCode",{parentName:"p"},"children")," but it's provided by the\nserver to simplify the data processing on the client side."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface SbtBuildTarget {\n  sbtVersion: string;\n\n  autoImports: string[];\n\n  scalaBuildTarget: ScalaBuildTarget;\n\n  parent?: BuildTargetIdentifier;\n\n  children: BuildTargetIdentifier[];\n}\n")))}b.isMDXComponent=!0}}]);