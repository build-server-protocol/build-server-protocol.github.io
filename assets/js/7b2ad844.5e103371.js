"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[589],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>h});var s=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);a&&(s=s.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,s)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function r(e,a){if(null==e)return{};var t,s,n=function(e,a){if(null==e)return{};var t,s,n={},i=Object.keys(e);for(s=0;s<i.length;s++)t=i[s],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)t=i[s],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=s.createContext({}),o=function(e){var a=s.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},d=function(e){var a=o(e.components);return s.createElement(c.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return s.createElement(s.Fragment,{},a)}},m=s.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),p=o(t),m=n,h=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return t?s.createElement(h,l(l({ref:a},d),{},{components:t})):s.createElement(h,l({ref:a},d))}));function h(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,l=new Array(i);l[0]=m;var r={};for(var c in a)hasOwnProperty.call(a,c)&&(r[c]=a[c]);r.originalType=e,r[p]="string"==typeof e?e:n,l[1]=r;for(var o=2;o<i;o++)l[o]=t[o];return s.createElement.apply(null,l)}return s.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8215:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var s=t(7462),n=t(3366),i=(t(7294),t(3905)),l=["components"],r={id:"scala",title:"Scala Extension",sidebar_label:"Scala"},c=void 0,o={unversionedId:"extensions/scala",id:"extensions/scala",title:"Scala Extension",description:"The following section contains Scala-specific extensions to the build server",source:"@site/generated/docs/extensions/scala.md",sourceDirName:"extensions",slug:"/extensions/scala",permalink:"/docs/extensions/scala",draft:!1,editUrl:"https://github.com/build-server-protocol/build-server-protocol/edit/master/docs/extensions/scala.md",tags:[],version:"current",lastUpdatedBy:"Tomasz Godzik",lastUpdatedAt:1707995614,formattedLastUpdatedAt:"Feb 15, 2024",frontMatter:{id:"scala",title:"Scala Extension",sidebar_label:"Scala"},sidebar:"docs",previous:{title:"sbt",permalink:"/docs/extensions/sbt"},next:{title:"Java",permalink:"/docs/bindings/java"}},d={},p=[{value:"BSP version",id:"bsp-version",level:2},{value:"BSP Server remote interface",id:"bsp-server-remote-interface",level:2},{value:"BuildTargetScalacOptions: request",id:"buildtargetscalacoptions-request",level:3},{value:"ScalacOptionsParams",id:"scalacoptionsparams",level:4},{value:"ScalacOptionsResult",id:"scalacoptionsresult",level:4},{value:"ScalacOptionsItem",id:"scalacoptionsitem",level:4},{value:"BuildTargetScalaTestClasses: request",id:"buildtargetscalatestclasses-request",level:3},{value:"ScalaTestClassesParams",id:"scalatestclassesparams",level:4},{value:"ScalaTestClassesResult",id:"scalatestclassesresult",level:4},{value:"ScalaTestClassesItem",id:"scalatestclassesitem",level:4},{value:"BuildTargetScalaMainClasses: request",id:"buildtargetscalamainclasses-request",level:3},{value:"ScalaMainClassesParams",id:"scalamainclassesparams",level:4},{value:"ScalaMainClassesResult",id:"scalamainclassesresult",level:4},{value:"ScalaMainClassesItem",id:"scalamainclassesitem",level:4},{value:"ScalaMainClass",id:"scalamainclass",level:4},{value:"RunParamsData kinds",id:"runparamsdata-kinds",level:2},{value:"ScalaMainClass",id:"scalamainclass-1",level:3},{value:"DebugSessionParamsData kinds",id:"debugsessionparamsdata-kinds",level:2},{value:"ScalaAttachRemote",id:"scalaattachremote",level:3},{value:"ScalaAttachRemote",id:"scalaattachremote-1",level:4},{value:"ScalaMainClass",id:"scalamainclass-2",level:3},{value:"BuildTargetData kinds",id:"buildtargetdata-kinds",level:2},{value:"ScalaBuildTarget",id:"scalabuildtarget",level:3},{value:"ScalaBuildTarget",id:"scalabuildtarget-1",level:4},{value:"ScalaPlatform",id:"scalaplatform",level:4},{value:"DiagnosticData kinds",id:"diagnosticdata-kinds",level:2},{value:"ScalaDiagnostic",id:"scaladiagnostic",level:3},{value:"ScalaDiagnostic",id:"scaladiagnostic-1",level:4},{value:"ScalaAction",id:"scalaaction",level:4},{value:"ScalaWorkspaceEdit",id:"scalaworkspaceedit",level:4},{value:"ScalaTextEdit",id:"scalatextedit",level:4},{value:"TestParamsData kinds",id:"testparamsdata-kinds",level:2},{value:"ScalaTestParams",id:"scalatestparams",level:3},{value:"ScalaTestParams",id:"scalatestparams-1",level:4},{value:"ScalaTestSuiteClasses",id:"scalatestsuiteclasses",level:3},{value:"ScalaTestSuiteClasses",id:"scalatestsuiteclasses-1",level:4},{value:"ScalaTestSuites",id:"scalatestsuites",level:3},{value:"ScalaTestSuites",id:"scalatestsuites-1",level:4},{value:"ScalaTestSuiteSelection",id:"scalatestsuiteselection",level:4}],u={toc:p};function m(e){var a=e.components,t=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,s.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The following section contains Scala-specific extensions to the build server\nprotocol."),(0,i.kt)("h2",{id:"bsp-version"},"BSP version"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"2.2.0")),(0,i.kt)("h2",{id:"bsp-server-remote-interface"},"BSP Server remote interface"),(0,i.kt)("h3",{id:"buildtargetscalacoptions-request"},"BuildTargetScalacOptions: request"),(0,i.kt)("p",null,"The build target scalac options request is sent from the client to the server to\nquery for the list of compiler options necessary to compile in a given list of\ntargets."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"method: ",(0,i.kt)("inlineCode",{parentName:"li"},"buildTarget/scalacOptions")),(0,i.kt)("li",{parentName:"ul"},"params: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalacOptionsParams")),(0,i.kt)("li",{parentName:"ul"},"result: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalacOptionsResult"))),(0,i.kt)("h4",{id:"scalacoptionsparams"},"ScalacOptionsParams"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalacOptionsParams {\n  targets: BuildTargetIdentifier[];\n}\n")),(0,i.kt)("h4",{id:"scalacoptionsresult"},"ScalacOptionsResult"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalacOptionsResult {\n  items: ScalacOptionsItem[];\n}\n")),(0,i.kt)("h4",{id:"scalacoptionsitem"},"ScalacOptionsItem"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalacOptionsItem {\n  target: BuildTargetIdentifier;\n\n  /** Additional arguments to the compiler.\n   * For example, -deprecation. */\n  options: string[];\n\n  /** The dependency classpath for this target, must be\n   * identical to what is passed as arguments to\n   * the -classpath flag in the command line interface\n   * of scalac.\n   * Deprecated: When the jvmCompileClasspath capability is supported, this might be empty and the buildTarget/jvmCompileClasspath endpoint should be used instead. */\n  classpath: string[];\n\n  /** The output directory for classfiles produced by this target */\n  classDirectory: string;\n}\n")),(0,i.kt)("h3",{id:"buildtargetscalatestclasses-request"},"BuildTargetScalaTestClasses: request"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Deprecated"),": Use buildTarget/jvmTestEnvironment instead"),(0,i.kt)("p",null,"The Scala build target test classes request is sent from the client to the\nserver to query for the list of fully qualified names of test classes in a given\nlist of targets."),(0,i.kt)("p",null,"This method can for example be used by a client to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Show a list of the discovered classes that can be tested."),(0,i.kt)("li",{parentName:"ul"},'Attach a "Run test suite" button above the definition of a test suite via\n',(0,i.kt)("inlineCode",{parentName:"li"},"textDocument/codeLens"),".")),(0,i.kt)("p",null,"(To render the code lens, the language server needs to map the fully qualified\nnames of the test targets to the defining source file via\n",(0,i.kt)("inlineCode",{parentName:"p"},"textDocument/definition"),". Then, once users click on the button, the language\nserver can pass the fully qualified name of the test class as an argument to the\n",(0,i.kt)("inlineCode",{parentName:"p"},"buildTarget/test")," request.)"),(0,i.kt)("p",null,"This request may trigger a compilation on the selected build targets. The server\nis free to send any number of ",(0,i.kt)("inlineCode",{parentName:"p"},"build/task*"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"build/publishDiagnostics")," and\n",(0,i.kt)("inlineCode",{parentName:"p"},"build/logMessage")," notifications during compilation before completing the\nresponse."),(0,i.kt)("p",null,"The client will get a ",(0,i.kt)("inlineCode",{parentName:"p"},"originId")," field in ",(0,i.kt)("inlineCode",{parentName:"p"},"ScalaTestClassesResult")," if the\n",(0,i.kt)("inlineCode",{parentName:"p"},"originId")," field in the ",(0,i.kt)("inlineCode",{parentName:"p"},"ScalaTestClassesParams")," is defined."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"method: ",(0,i.kt)("inlineCode",{parentName:"li"},"buildTarget/scalaTestClasses")),(0,i.kt)("li",{parentName:"ul"},"params: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalaTestClassesParams")),(0,i.kt)("li",{parentName:"ul"},"result: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalaTestClassesResult"))),(0,i.kt)("h4",{id:"scalatestclassesparams"},"ScalaTestClassesParams"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaTestClassesParams {\n  targets: BuildTargetIdentifier[];\n\n  /** An optional number uniquely identifying a client request. */\n  originId?: string;\n}\n")),(0,i.kt)("h4",{id:"scalatestclassesresult"},"ScalaTestClassesResult"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaTestClassesResult {\n  /** An optional id of the request that triggered this result. */\n  items: ScalaTestClassesItem[];\n}\n")),(0,i.kt)("h4",{id:"scalatestclassesitem"},"ScalaTestClassesItem"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaTestClassesItem {\n  /** The build target that contains the test classes. */\n  target: BuildTargetIdentifier;\n\n  /** Name of the the framework to which classes belong.\n   * It's optional in order to maintain compatibility, however it is expected\n   * from the newer implementations to not leave that field unspecified. */\n  framework?: string;\n\n  /** The fully qualified names of the test classes in this target */\n  classes: string[];\n}\n")),(0,i.kt)("h3",{id:"buildtargetscalamainclasses-request"},"BuildTargetScalaMainClasses: request"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Deprecated"),": Use buildTarget/jvmRunEnvironment instead"),(0,i.kt)("p",null,"The build target main classes request is sent from the client to the server to\nquery for the list of main classes that can be fed as arguments to\n",(0,i.kt)("inlineCode",{parentName:"p"},"buildTarget/run"),". This method can be used for the same use cases than the\n",(0,i.kt)("a",{parentName:"p",href:"#scala-test-classes-request"},"Scala Test Classes Request")," enables.\nThis request may trigger a compilation on the selected build targets. The server\nis free to send any number of ",(0,i.kt)("inlineCode",{parentName:"p"},"build/taskStart"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"build/taskProgress"),",\n",(0,i.kt)("inlineCode",{parentName:"p"},"build/taskFinish"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"build/publishDiagnostics")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"build/logMessage"),"\nnotifications during compilation before completing the response.\nThe client will get a ",(0,i.kt)("inlineCode",{parentName:"p"},"originId")," field in ",(0,i.kt)("inlineCode",{parentName:"p"},"ScalaMainClassesResult")," if the\n",(0,i.kt)("inlineCode",{parentName:"p"},"originId")," field in the ",(0,i.kt)("inlineCode",{parentName:"p"},"ScalaMainClassesParams")," is defined."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"method: ",(0,i.kt)("inlineCode",{parentName:"li"},"buildTarget/scalaMainClasses")),(0,i.kt)("li",{parentName:"ul"},"params: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalaMainClassesParams")),(0,i.kt)("li",{parentName:"ul"},"result: ",(0,i.kt)("inlineCode",{parentName:"li"},"ScalaMainClassesResult"))),(0,i.kt)("h4",{id:"scalamainclassesparams"},"ScalaMainClassesParams"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaMainClassesParams {\n  targets: BuildTargetIdentifier[];\n\n  /** An optional number uniquely identifying a client request. */\n  originId?: string;\n}\n")),(0,i.kt)("h4",{id:"scalamainclassesresult"},"ScalaMainClassesResult"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaMainClassesResult {\n  items: ScalaMainClassesItem[];\n\n  /** An optional id of the request that triggered this result. */\n  originId?: string;\n}\n")),(0,i.kt)("h4",{id:"scalamainclassesitem"},"ScalaMainClassesItem"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaMainClassesItem {\n  /** The build target that contains the test classes. */\n  target: BuildTargetIdentifier;\n\n  /** The main class item. */\n  classes: ScalaMainClass[];\n}\n")),(0,i.kt)("h4",{id:"scalamainclass"},"ScalaMainClass"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaMainClass {\n  /** The main class to run. */\n  className: string;\n\n  /** The user arguments to the main entrypoint.\n   * Deprecated: Use `buildTarget/run` params instead */\n  arguments: string[];\n\n  /** The jvm options for the application. */\n  jvmOptions: string[];\n\n  /** The environment variables for the application.\n   * Deprecated: Use `buildTarget/run` params instead */\n  environmentVariables?: string[];\n}\n")),(0,i.kt)("h2",{id:"runparamsdata-kinds"},"RunParamsData kinds"),(0,i.kt)("h3",{id:"scalamainclass-1"},"ScalaMainClass"),(0,i.kt)("p",null,"This structure is embedded in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"data?: RunParamsData")," field, when\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"dataKind")," field contains ",(0,i.kt)("inlineCode",{parentName:"p"},'"scala-main-class"'),"."),(0,i.kt)("h2",{id:"debugsessionparamsdata-kinds"},"DebugSessionParamsData kinds"),(0,i.kt)("h3",{id:"scalaattachremote"},"ScalaAttachRemote"),(0,i.kt)("p",null,"This structure is embedded in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"data?: DebugSessionParamsData")," field, when\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"dataKind")," field contains ",(0,i.kt)("inlineCode",{parentName:"p"},'"scala-attach-remote"'),"."),(0,i.kt)("h4",{id:"scalaattachremote-1"},"ScalaAttachRemote"),(0,i.kt)("p",null,"The debug session will connect to a running process. The DAP client will send the port of the running process later."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaAttachRemote {\n}\n")),(0,i.kt)("h3",{id:"scalamainclass-2"},"ScalaMainClass"),(0,i.kt)("p",null,"This structure is embedded in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"data?: DebugSessionParamsData")," field, when\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"dataKind")," field contains ",(0,i.kt)("inlineCode",{parentName:"p"},'"scala-main-class"'),"."),(0,i.kt)("h2",{id:"buildtargetdata-kinds"},"BuildTargetData kinds"),(0,i.kt)("h3",{id:"scalabuildtarget"},"ScalaBuildTarget"),(0,i.kt)("p",null,"This structure is embedded in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"data?: BuildTargetData")," field, when\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"dataKind")," field contains ",(0,i.kt)("inlineCode",{parentName:"p"},'"scala"'),"."),(0,i.kt)("h4",{id:"scalabuildtarget-1"},"ScalaBuildTarget"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ScalaBuildTarget")," is a basic data structure that contains scala-specific\nmetadata for compiling a target containing Scala sources."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaBuildTarget {\n  /** The Scala organization that is used for a target. */\n  scalaOrganization: string;\n\n  /** The scala version to compile this target */\n  scalaVersion: string;\n\n  /** The binary version of scalaVersion.\n   * For example, 2.12 if scalaVersion is 2.12.4. */\n  scalaBinaryVersion: string;\n\n  /** The target platform for this target */\n  platform: ScalaPlatform;\n\n  /** A sequence of Scala jars such as scala-library, scala-compiler and scala-reflect. */\n  jars: URI[];\n\n  /** The jvm build target describing jdk to be used */\n  jvmBuildTarget?: JvmBuildTarget;\n}\n")),(0,i.kt)("h4",{id:"scalaplatform"},"ScalaPlatform"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export enum ScalaPlatform {\n  Jvm = 1,\n\n  Js = 2,\n\n  Native = 3,\n}\n")),(0,i.kt)("h2",{id:"diagnosticdata-kinds"},"DiagnosticData kinds"),(0,i.kt)("h3",{id:"scaladiagnostic"},"ScalaDiagnostic"),(0,i.kt)("p",null,"This structure is embedded in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"data?: DiagnosticData")," field, when\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"dataKind")," field contains ",(0,i.kt)("inlineCode",{parentName:"p"},'"scala"'),"."),(0,i.kt)("h4",{id:"scaladiagnostic-1"},"ScalaDiagnostic"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ScalaDiagnostic")," is a data structure that contains Scala-specific\nmetadata generated by Scala compilation."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaDiagnostic {\n  /** Actions (also known as quick fixes) that are able to either fix or address\n   * the issue that is causing this diagnostic. */\n  actions?: ScalaAction[];\n}\n")),(0,i.kt)("h4",{id:"scalaaction"},"ScalaAction"),(0,i.kt)("p",null,"A Scala action represents a change that can be performed in code.\nSee also ",(0,i.kt)("a",{parentName:"p",href:"https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_codeAction"},"LSP: Code Action Request"),"."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note"),": In LSP, ",(0,i.kt)("inlineCode",{parentName:"p"},"CodeAction")," appears only as a response to a ",(0,i.kt)("inlineCode",{parentName:"p"},"textDocument/codeAction")," request,\nwhereas ScalaAction is intended to be returned as ",(0,i.kt)("inlineCode",{parentName:"p"},"Diagnostics.data.actions"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaAction {\n  /** A short, human-readable, title for this code action. */\n  title: string;\n\n  /** A description that may be shown to the user client side to explain the action. */\n  description?: string;\n\n  /** The workspace edit this code action performs. */\n  edit?: ScalaWorkspaceEdit;\n}\n")),(0,i.kt)("h4",{id:"scalaworkspaceedit"},"ScalaWorkspaceEdit"),(0,i.kt)("p",null,"A workspace edit represents changes to many resources managed in the workspace."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaWorkspaceEdit {\n  changes: ScalaTextEdit[];\n}\n")),(0,i.kt)("h4",{id:"scalatextedit"},"ScalaTextEdit"),(0,i.kt)("p",null,"A textual edit applicable to a text document."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaTextEdit {\n  /** The range of the text document to be manipulated. To insert\n   * text into a document create a range where start === end. */\n  range: Range;\n\n  /** The string to be inserted. For delete operations use an\n   * empty string. */\n  newText: string;\n}\n")),(0,i.kt)("h2",{id:"testparamsdata-kinds"},"TestParamsData kinds"),(0,i.kt)("h3",{id:"scalatestparams"},"ScalaTestParams"),(0,i.kt)("p",null,"This structure is embedded in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"data?: TestParamsData")," field, when\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"dataKind")," field contains ",(0,i.kt)("inlineCode",{parentName:"p"},'"scala-test"'),"."),(0,i.kt)("h4",{id:"scalatestparams-1"},"ScalaTestParams"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ScalaTestParams")," contains scala-specific metadata for testing Scala targets."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaTestParams {\n  /** The test classes to be run in this test execution.\n   * It is the result of `buildTarget/scalaTestClasses`. */\n  testClasses?: ScalaTestClassesItem[];\n\n  /** The JVM options to run tests with. They replace any options\n   * that are defined by the build server if defined. */\n  jvmOptions?: string[];\n}\n")),(0,i.kt)("h3",{id:"scalatestsuiteclasses"},"ScalaTestSuiteClasses"),(0,i.kt)("p",null,"This structure is embedded in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"data?: TestParamsData")," field, when\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"dataKind")," field contains ",(0,i.kt)("inlineCode",{parentName:"p"},'"scala-test-suites"'),"."),(0,i.kt)("h4",{id:"scalatestsuiteclasses-1"},"ScalaTestSuiteClasses"),(0,i.kt)("p",null,"Each element of this array is a fully qualified class name."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export type ScalaTestSuiteClasses = string[];\n")),(0,i.kt)("h3",{id:"scalatestsuites"},"ScalaTestSuites"),(0,i.kt)("p",null,"This structure is embedded in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"data?: TestParamsData")," field, when\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"dataKind")," field contains ",(0,i.kt)("inlineCode",{parentName:"p"},'"scala-test-suites-selection"'),"."),(0,i.kt)("h4",{id:"scalatestsuites-1"},"ScalaTestSuites"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaTestSuites {\n  /** The fully qualified names of the test classes in this target and the tests in this test classes */\n  suites: ScalaTestSuiteSelection[];\n\n  /** Additional jvmOptions which will be passed to the forked JVM */\n  jvmOptions: string[];\n\n  /** Enviroment variables should be an array of strings in format KEY=VALUE\n   * Deprecated: Use `buildTarget/test` params instead */\n  environmentVariables: string[];\n}\n")),(0,i.kt)("h4",{id:"scalatestsuiteselection"},"ScalaTestSuiteSelection"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ScalaTestSuiteSelection {\n  /** Fully qualified name of the test suite class */\n  className: string;\n\n  /** List of tests which should be run within this test suite.\n   * Empty collection means that all of them are supposed to be executed. */\n  tests: string[];\n}\n")))}m.isMDXComponent=!0}}]);