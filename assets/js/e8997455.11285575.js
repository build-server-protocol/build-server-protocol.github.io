"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[632],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},v="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),v=m(n),d=i,c=v["".concat(s,".").concat(d)]||v[d]||p[d]||a;return n?r.createElement(c,o(o({ref:t},u),{},{components:n})):r.createElement(c,o({ref:t},u))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[v]="string"==typeof e?e:i,o[1]=l;for(var m=2;m<a;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3391:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>m,toc:()=>v});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={id:"jvm",title:"JVM Extension",sidebar_label:"JVM"},s=void 0,m={unversionedId:"extensions/jvm",id:"extensions/jvm",title:"JVM Extension",description:"The following section contains JVM-specific extensions to the build server",source:"@site/target/docs/extensions/jvm.md",sourceDirName:"extensions",slug:"/extensions/jvm",permalink:"/docs/extensions/jvm",draft:!1,editUrl:"https://github.com/build-server-protocol/build-server-protocol/edit/master/docs/extensions/jvm.md",tags:[],version:"current",frontMatter:{id:"jvm",title:"JVM Extension",sidebar_label:"JVM"},sidebar:"docs",previous:{title:"Java",permalink:"/docs/extensions/java"},next:{title:"Maven",permalink:"/docs/extensions/maven"}},u={},v=[{value:"Common shapes",id:"common-shapes",level:2},{value:"JvmBuildTarget",id:"jvmbuildtarget",level:4},{value:"URI",id:"uri",level:4},{value:"BSP Server remote interface",id:"bsp-server-remote-interface",level:2},{value:"JvmTestEnvironment: request",id:"jvmtestenvironment-request",level:3},{value:"JvmTestEnvironmentParams",id:"jvmtestenvironmentparams",level:4},{value:"BuildTargetIdentifier",id:"buildtargetidentifier",level:4},{value:"Identifier",id:"identifier",level:4},{value:"JvmTestEnvironmentResult",id:"jvmtestenvironmentresult",level:4},{value:"JvmEnvironmentItem",id:"jvmenvironmentitem",level:4},{value:"JvmMainClass",id:"jvmmainclass",level:4},{value:"JvmRunEnvironment: request",id:"jvmrunenvironment-request",level:3},{value:"JvmRunEnvironmentParams",id:"jvmrunenvironmentparams",level:4},{value:"JvmRunEnvironmentResult",id:"jvmrunenvironmentresult",level:4}],p={toc:v};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The following section contains JVM-specific extensions to the build server\nprotocol."),(0,a.kt)("h2",{id:"common-shapes"},"Common shapes"),(0,a.kt)("h4",{id:"jvmbuildtarget"},"JvmBuildTarget"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"JvmBuildTarget")," is a basic data structure that contains jvm-specific\nmetadata, specifically JDK reference. This metadata is embedded in\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"data: Option[Json]")," field of the ",(0,a.kt)("inlineCode",{parentName:"p"},"BuildTarget")," definition, when\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"dataKind"),' field contains "jvm".'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface JvmBuildTarget {\n  /** Uri representing absolute path to jdk\n   * For example: file:///usr/lib/jvm/java-8-openjdk-amd64 */\n  javaHome?: URI;\n\n  /** The java version this target is supposed to use.\n   * For example: 1.8 */\n  javaVersion?: String;\n}\n")),(0,a.kt)("h4",{id:"uri"},"URI"),(0,a.kt)("p",null,"A resource identifier that is a valid URI according to rfc3986:\n",(0,a.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc3986"},"https://tools.ietf.org/html/rfc3986")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export type URI = String;\n")),(0,a.kt)("h2",{id:"bsp-server-remote-interface"},"BSP Server remote interface"),(0,a.kt)("h3",{id:"jvmtestenvironment-request"},"JvmTestEnvironment: request"),(0,a.kt)("p",null,"The JVM test environment request is sent from the client to the server in order to\ngather information required to launch a Java process. This is useful when the\nclient wants to control the Java process execution, for example to enable custom\nJava agents or launch a custom main class during unit testing or debugging"),(0,a.kt)("p",null,"The data provided by this endpoint may change between compilations, so it should\nnot be cached in any form. The client should ask for it right before test execution,\nafter all the targets are compiled."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"method: ",(0,a.kt)("inlineCode",{parentName:"li"},"buildTarget/jvmTestEnvironment")),(0,a.kt)("li",{parentName:"ul"},"params: ",(0,a.kt)("inlineCode",{parentName:"li"},"JvmTestEnvironmentParams")),(0,a.kt)("li",{parentName:"ul"},"result: ",(0,a.kt)("inlineCode",{parentName:"li"},"JvmTestEnvironmentResult"))),(0,a.kt)("h4",{id:"jvmtestenvironmentparams"},"JvmTestEnvironmentParams"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface JvmTestEnvironmentParams {\n  targets: BuildTargetIdentifier[];\n\n  originId?: Identifier;\n}\n")),(0,a.kt)("h4",{id:"buildtargetidentifier"},"BuildTargetIdentifier"),(0,a.kt)("p",null,"A unique identifier for a target, can use any URI-compatible encoding as long as it is unique within the workspace.\nClients should not infer metadata out of the URI structure such as the path or query parameters, use ",(0,a.kt)("inlineCode",{parentName:"p"},"BuildTarget")," instead."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface BuildTargetIdentifier {\n  /** The target\u2019s Uri */\n  uri: URI;\n}\n")),(0,a.kt)("h4",{id:"identifier"},"Identifier"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export type Identifier = String;\n")),(0,a.kt)("h4",{id:"jvmtestenvironmentresult"},"JvmTestEnvironmentResult"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface JvmTestEnvironmentResult {\n  items: JvmEnvironmentItem[];\n}\n")),(0,a.kt)("h4",{id:"jvmenvironmentitem"},"JvmEnvironmentItem"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface JvmEnvironmentItem {\n  target: BuildTargetIdentifier;\n\n  classpath: String[];\n\n  jvmOptions: String[];\n\n  workingDirectory: String;\n\n  environmentVariables: Map<String, String>;\n\n  mainClasses?: JvmMainClass[];\n}\n")),(0,a.kt)("h4",{id:"jvmmainclass"},"JvmMainClass"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface JvmMainClass {\n  className: String;\n\n  arguments: String[];\n}\n")),(0,a.kt)("h3",{id:"jvmrunenvironment-request"},"JvmRunEnvironment: request"),(0,a.kt)("p",null,"Similar to ",(0,a.kt)("inlineCode",{parentName:"p"},"buildTarget/jvmTestEnvironment"),", but returns environment\nthat should be used for regular exection of main classes, not for testing"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"method: ",(0,a.kt)("inlineCode",{parentName:"li"},"buildTarget/jvmRunEnvironment")),(0,a.kt)("li",{parentName:"ul"},"params: ",(0,a.kt)("inlineCode",{parentName:"li"},"JvmRunEnvironmentParams")),(0,a.kt)("li",{parentName:"ul"},"result: ",(0,a.kt)("inlineCode",{parentName:"li"},"JvmRunEnvironmentResult"))),(0,a.kt)("h4",{id:"jvmrunenvironmentparams"},"JvmRunEnvironmentParams"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface JvmRunEnvironmentParams {\n  targets: BuildTargetIdentifier[];\n\n  originId?: Identifier;\n}\n")),(0,a.kt)("h4",{id:"jvmrunenvironmentresult"},"JvmRunEnvironmentResult"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface JvmRunEnvironmentResult {\n  items: JvmEnvironmentItem[];\n}\n")))}d.isMDXComponent=!0}}]);